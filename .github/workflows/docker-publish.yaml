name: Build and Push Docker Image

# 当代码被推送到 main 分支时触发
on:
  push:
    branches: [ "main" ]

# 定义环境变量，方便复用
env:
  REGISTRY: ghcr.io
  # 关键修正：我们在这里定义不带小写转换的 IMAGE_NAME
  # 因为小写转换应该只在需要它的地方（metadata-action）进行一次
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    # 需要赋予 GITHUB_TOKEN 写包的权限
    permissions:
      contents: read
      packages: write

    steps:
      # 第一步：检出代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # 第二步：登录到 GitHub Container Registry
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 第三步：从镜像名和 git ref 中提取元数据（标签等）
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          # 在这里使用 tolower 函数，确保镜像名是小写的
          images: ${{ env.REGISTRY }}/${{ tolower(env.IMAGE_NAME) }}

      # 第四步：构建并推送到 GCR
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          # 关键点：直接使用上一步骤 (meta) 生成的 tags 和 labels
          # 这里不再需要任何 tolower 或其他手动构造
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}